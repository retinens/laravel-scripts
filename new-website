#!/bin/bash
RETINENS_SCRIPTS_FOLDER=$(cd $(dirname $0) && pwd)
source $RETINENS_SCRIPTS_FOLDER/dotenv

$RETINENS_SCRIPTS_FOLDER/check-updates

echo -e "\e[33m
██████  ███████ ████████ ██ ███    ██ ███████ ███    ██ ███████
██   ██ ██         ██    ██ ████   ██ ██      ████   ██ ██
██████  █████      ██    ██ ██ ██  ██ █████   ██ ██  ██ ███████
██   ██ ██         ██    ██ ██  ██ ██ ██      ██  ██ ██      ██
██   ██ ███████    ██    ██ ██   ████ ███████ ██   ████ ███████
\e[0m"

#project name
echo -e "New \e[33mLaravel\e[0m project script\n"
echo -e "Project name ?"
read projectname

#check if directory exists
if [ -d "$projectname" ]; then
  echo "\e[31mERROR \e[0m: $projectname directory already exists."
  exit
fi

#creates laravel project
echo -e "\n\e[32mInstalling Laravel\e[0m in $projectname"
composer create-project laravel/laravel "$projectname" --quiet
cd "$projectname" || exit
echo "$projectname" >README.md

mkdir domain
mkdir app/Common
mkdir app/Common/Controllers
mkdir domain/Users/
mkdir domain/Users/Models/
mkdir app/Auth
mkdir app/Auth/Controllers
mkdir app/Admin
mkdir app/Admin/Middleware
mkdir app/Admin/Controllers
mkdir .github
mkdir .github/workflows

rm app/Http/Controllers -rf
rm app/Models -rf

echo -e "Getting \e[32mbasic libraries\e[0m for Laravel"
composer require artesaos/seotools livewire/livewire doctrine/dbal laravelcollective/html spatie/data-transfer-object rap2hpoutre/laravel-log-viewer --quiet
php artisan vendor:publish --provider="Artesaos\SEOTools\Providers\SEOToolsServiceProvider" --quiet

composer require laravel-lang/publisher laravel-lang/lang friendsofphp/php-cs-fixer nunomaduro/larastan --dev --quiet
php artisan lang:add fr

composer require league/flysystem-aws-s3-v3 "~3.0" sammyjo20/lasso --quiet
php artisan vendor:publish --tag=lasso-config

git clone --depth=1 https://github.com/retinens/laravel-retinens-base-files tmp --quiet

mv tmp/2022_04_15_104321_update_users_table.php database/migrations/
mv tmp/DatabaseSeeder.php database/seeders/
mv tmp/User.php domain/Users/Models/

mv tmp/web.php routes/
mv tmp/auth.php routes/
mv tmp/admin.php routes/

mv tmp/admin/AdminSeoMiddleware.php app/Admin/Middleware/
mv tmp/admin/IsAdminMiddleware.php app/Admin/Middleware/
mv tmp/admin/HomePageController.php app/Admin/Controllers/
mv tmp/common/Controller.php app/Common/Controllers/Controller.php
mv tmp/auth/* app/Auth/Controllers/

mv tmp/phpstan.neon ./
mv tmp/deploy.yml .github/workflows/deploy.yml


echo -e "Installing \e[32mLaravel UI\e[0m & \e[32mBootstrap \e[0m"
composer require laravel/ui --quiet
php artisan ui bootstrap --quiet

echo -e "Setting up your .env file"

.env set MAIL_HOST="0.0.0.0"
.env set MAIL_PORT="1025"
.env set MAIL_FROM_ADDRESS="test@""$projectname"".test"
.env set DB_DATABASE="$projectname"
.env set DB_USERNAME="root"
.env set DB_PASSWORD="root"
.env set APP_URL="https://""$projectname"".test"

php "$RETINENS_SCRIPTS_FOLDER/updateComposerPSR4.php"

echo -e "Setting up \e[32msass\e[0m boilerplate"
mkdir resources/app
rm resources/css -rf
rm resources/js -rf
rm resources/sass -rf
#getting sass boilerplate
git clone --depth=1 https://github.com/retinens/laravel-app-assets-boilerplate resources/app --quiet
rm resources/app/.git -rf
rm resources/app/.gitignore -rf

git clone --depth=1 https://github.com/retinens/laravel-admin-assets-boilerplate resources/admin --quiet
rm resources/admin/.git -rf
rm resources/admin/.gitignore -rf

echo -e "Setting up \e[32mviews\e[0m boilerplate"
rm resources/views -rf
#getting views boiler plate
git clone --depth=1 https://github.com/retinens/laravel-views-boilerplate resources/views --quiet
rm resources/views/.git -rf
rm resources/views/.gitignore -rf

mv lang resources/lang

echo -e "Editing\e[32m webpack.mix.js\e[0m to work with our boilerplate and setting up \e[32mbrowser-sync\e[0m"

echo "
const mix = require('laravel-mix');

const domain = '$projectname.test'; 
const homedir = require('os').homedir();
mix.browserSync({
    proxy: 'https://' + domain,
    host: domain,
    open: 'external',
    https: {
        key: homedir + '/.valet/Certificates/' + domain + '.key',
        cert: homedir + '/.valet/Certificates/' + domain + '.crt',
    },
});

    if (['admin'].includes(process.env.npm_config_section)) {
        mix
            .setPublicPath('public/backend')
            .js('./resources/admin/js/admin.js', 'js')
            .extract()
            .sass('./resources/admin/sass/admin.scss', 'css')
            .version();
    } else {
        mix
            .setPublicPath('public/app')
            .js('./resources/app/js/app.js', 'js')
            .extract()
            .copyDirectory('./resources/app/tarteaucitron','./public/app/js')
            .sass('./resources/app/sass/app.scss', 'css')
            .version();
    }

    " >webpack.mix.js

echo -e "Compiling assets"
npm install bootstrap @popperjs/core jquery popper.js --save-dev
npm install @themesberg/volt-bootstrap-5-dashboard datatables.net datatables.net-bs5 jquery-validation select2 select2-bootstrap-5-theme sweetalert moment wowjs lozad trix toastr tempusdominus-bootstrap-4 --save

npm install prettier @prettier/plugin-php  --save

npm add vue-template-compiler browser-sync browser-sync-webpack-plugin --save
npm install
npm install resolve-url-loader@^4.0.0 --save-dev

rm tmp -rf

echo -e "Setting up git repo"

git init
git flow init -d

echo "/public/app/" >>.gitignore
echo "/public/backend/" >>.gitignore
echo "/public/fonts/vendor" >>.gitignore
echo "/public/images/vendor" >>.gitignore
echo "/public/mix-manifest.json" >>.gitignore
echo "/.php\_cs.cache" >>.gitignore
echo "/.lasso" >>.gitignore
echo ".php-cs-fixer.cache" >>.gitignore

git add .
git commit -m "Laravel Project Setup" --quiet

echo -e "\e[32mCreating now a repository on github\e[0m"

gh repo create retinens/"$projectname" -y --private
git remote add origin git@github.com:retinens/"$projectname".git
git push origin develop --set-upstream




echo -e "Setting up valet"
valet db:create
php artisan migrate
valet secure
valet open
exit
