#!/bin/bash -i
RETINENS_SCRIPTS_FOLDER=$(cd $(dirname $0) && pwd)

$RETINENS_SCRIPTS_FOLDER/check-updates

echo -e "\e[33m
  _____  ______ _______ _____ _   _ ______ _   _  _____
 |  __ \|  ____|__   __|_   _| \ | |  ____| \ | |/ ____|
 | |__) | |__     | |    | | |  \| | |__  |  \| | (___
 |  _  /|  __|    | |    | | | . \` |  __| | . \` |\___ \\
 | | \ \| |____   | |   _| |_| |\  | |____| |\  |____) |
 |_|  \_\______|  |_|  |_____|_| \_|______|_| \_|_____/
\e[0m"
#Github access token
source ~/.bashrc
if [ -z $GH_TOKEN ] || [ -z $GH_USER ]; then
  echo -e "\e[32m Setting up Github access token\e[0m"
  source "$RETINENS_SCRIPTS_FOLDER"/getting-github-access-token
fi


#project name
echo -e "New \e[33mLaravel\e[0m project script\n"
echo -e "Project name ?"
read projectname

#check if directory exists
if [ -d "$projectname" ]; then
  echo "\e[31mERROR \e[0m: $projectname directory already exists."
  exit
fi

#creates laravel project
echo -e "\n\e[32mInstalling Laravel\e[0m in $projectname"
composer create-project laravel/laravel "$projectname" --quiet
cd "$projectname"
echo "$projectname" > README.md
echo -e "Getting \e[32mbasic libraries\e[0m for Laravel (SEOTools & laravel-cookie-consent)"
composer require artesaos/seotools spatie/laravel-cookie-consent --quiet
php artisan vendor:publish --provider="Artesaos\SEOTools\Providers\SEOToolsServiceProvider" --quiet

echo -e "Installing \e[32mLaravel UI\e[0m & \e[32mBootstrap \e[0m"
composer require laravel/ui --quiet
php artisan ui bootstrap --quiet

echo -e "<?php

Route::get('/', function () {
    return view('pages.home'); 
})->name('home');" > routes/web.php

echo -e "Setting up \e[32msass\e[0m boilerplate"
mkdir resources/app
mv resources/js resources/app
rm resources/sass -rf
#getting sass boilerplate
git clone --depth=1 git://github.com/retinens/laravel-sass-boilerplate resources/app/sass --quiet && rm resources/app/sass/.git -rf

echo -e "Setting up \e[32mviews\e[0m boilerplate"

rm resources/views -rf
#getting views boiler plate
git clone --depth=1 git://github.com/retinens/laravel-views-boilerplate resources/views --quiet && rm resources/views/.git -rf

echo -e "Editing\e[32m webpack.mix.js\e[0m to work with our boilerplate and setting up \e[32mbrowser-sync\e[0m"

echo "
const mix = require('laravel-mix');
require('laravel-mix-merge-manifest');

const domain = '$projectname.test'; 
const homedir = require('os').homedir();
mix.browserSync({
    proxy: 'https://' + domain,
    host: domain,
    open: 'external',
    https: {
        key: homedir + '/.valet/Certificates/' + domain + '.key',
        cert: homedir + '/.valet/Certificates/' + domain + '.crt',
    },
});

mix.js('resources/app/js/app.js', 'public/app/js').extract().mergeManifest();
    mix.sass('resources/app/sass/app.scss', 'public/app/css');" >webpack.mix.js

echo -e "Compiling assets"
npm add laravel-mix-merge-manifest vue-template-compiler browser-sync browser-sync-webpack-plugin --save
npm install
npm run dev

echo -e "Setting up git repo"

git init
git flow init -d
echo "/.idea" >>.gitignore
git add .
git commit -m "First commit" --quiet

echo -e "\e[32mCreating now a repository on github\e[0m"
gitUrl=$(curl -u $GH_USER:$GH_TOKEN POST https://api.github.com/orgs/retinens/repos --data '{"name":"'"$projectname"'","private":"true"}' | jq -r .ssh_url)

git remote add origin "$gitUrl"
git push --set-upstream origin develop

echo -e "Setting up valet"
valet secure
valet open
exit
